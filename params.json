{"name":"fusonic-linq","tagline":"PHP implementation of LINQ","body":"fusonic-linq\r\n-----------------\r\n\r\nfusonic-linq is a PHP library inspired by the LINQ extension methods in .NET.\r\n\r\nRequirements\r\n------------\r\n\r\nfusonic-linq is supported on PHP 5.3 and up.\r\n\r\n\r\nInstallation & Usage\r\n------------\r\n\r\nThe most flexible installation method is using Composer: Simply create a composer.json file in the root of your project:\r\n``` json\r\n{\r\n    \"require\": {\r\n        \"fusonic/fusonic-linq\": \"@dev\"\r\n    }\r\n}\r\n```\r\n\r\nInstall composer and run install command:\r\n``` bash\r\ncurl -s http://getcomposer.org/installer | php\r\nphp composer.phar install\r\n``` \r\n\r\nOnce installed, include vendor/autoload.php in your script to autoload fusonic-linq.\r\n\r\n``` php\r\nrequire 'vendor/autoload.php';\r\nuse Fusonic\\Linq\\Linq;\r\n\r\nLinq::from(array())->count();\r\n```\r\n\r\nExamples\r\n-----\r\n\r\nCalculate the average file size of files in a directory\r\n``` php\r\n$source = glob(\"files/*\");\r\nLinq::from($source)\r\n  ->select(function($i) { return filesize($i); })\r\n  ->average();\r\n```\r\n\r\nFind all files bigger than 1024 bytes and return the fileinfo object.\r\n``` php\r\n$source = glob(\"files/*\");\r\nLinq::from($source)\r\n  ->where(function($i) { return filesize($i) > 1024; })\r\n  ->select(function($i) { return pathinfo($i); });\r\n```\r\n\r\nRunning tests\r\n-------------\r\n\r\nYou can run the test suite with the following command:\r\n\r\n``` bash\r\nphpunit --bootstrap tests/bootstrap.php .\r\n``` \r\n","google":"UA-6104857-19","note":"Don't delete this file! It's used internally to help with page regeneration."}